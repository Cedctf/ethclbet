/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  23295: {
    SimpleBet: {
      address: "0x0E877Cce98831a4237A35717c1FE75E9c8510778",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "domain",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "A13e_RevokedAuthToken",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_AddressMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_ChainIdMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_DomainMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_Expired",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_NotBeforeInFuture",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweParser_InvalidAddressLength",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweParser_InvalidNonce",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum SimpleBet.BetOutcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
          ],
          name: "BetPlaced",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum SimpleBet.BetStatus",
              name: "status",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "payout",
              type: "uint256",
            },
          ],
          name: "BetResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FundsWithdrawn",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "cancelBet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "domain",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getAllBets",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "betIndex",
              type: "uint256",
            },
          ],
          name: "getBet",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getContractBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalBets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getUserBetCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getUserBets",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "siweMsg",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "v",
                  type: "uint256",
                },
              ],
              internalType: "struct SignatureRSV",
              name: "sig",
              type: "tuple",
            },
          ],
          name: "login",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "ownerWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum SimpleBet.BetOutcome",
              name: "outcome",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "placeBet",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "won",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "resolveBet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawBalance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        domain: "@oasisprotocol/sapphire-contracts/contracts/auth/SiweAuth.sol",
        login: "@oasisprotocol/sapphire-contracts/contracts/auth/SiweAuth.sol",
      },
      deployedOnBlock: 12901541,
    },
  },
  31337: {
    SimpleBet: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "domain",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "A13e_RevokedAuthToken",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_AddressMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_ChainIdMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_DomainMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_Expired",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweAuth_NotBeforeInFuture",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweParser_InvalidAddressLength",
          type: "error",
        },
        {
          inputs: [],
          name: "SiweParser_InvalidNonce",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum SimpleBet.BetOutcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
          ],
          name: "BetPlaced",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum SimpleBet.BetStatus",
              name: "status",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "payout",
              type: "uint256",
            },
          ],
          name: "BetResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FundsWithdrawn",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "cancelBet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "domain",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getAllBets",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "betIndex",
              type: "uint256",
            },
          ],
          name: "getBet",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getContractBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalBets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getUserBetCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getUserBets",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "enum SimpleBet.BetOutcome",
                  name: "outcome",
                  type: "uint8",
                },
                {
                  internalType: "enum SimpleBet.BetStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct SimpleBet.Bet[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "siweMsg",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "v",
                  type: "uint256",
                },
              ],
              internalType: "struct SignatureRSV",
              name: "sig",
              type: "tuple",
            },
          ],
          name: "login",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "ownerWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum SimpleBet.BetOutcome",
              name: "outcome",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "placeBet",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "betId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "won",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "token",
              type: "bytes",
            },
          ],
          name: "resolveBet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawBalance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        domain: "@oasisprotocol/sapphire-contracts/contracts/auth/SiweAuth.sol",
        login: "@oasisprotocol/sapphire-contracts/contracts/auth/SiweAuth.sol",
      },
      deployedOnBlock: 5,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
